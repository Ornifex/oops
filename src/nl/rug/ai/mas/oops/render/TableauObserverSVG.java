/**
  * This program (working title: MAS Prover) is an automated tableaux prover
  * for epistemic logic (S5n).
  * Copyright (C) 2007  Elske van der Vaart and Gert van Valkenhoef

  * This program is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 as published
  * by the Free Software Foundation.

  * This program is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.

  * You should have received a copy of the GNU General Public License along
  * with this program; if not, write to the Free Software Foundation, Inc.,
  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
  */
package nl.rug.ai.mas.oops.render;

import nl.rug.ai.mas.oops.tableau.Tableau;
import nl.rug.ai.mas.oops.tableau.TableauEvent;
import nl.rug.ai.mas.oops.tableau.TableauFinishedEvent;

import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.awt.FontFormatException;

import org.apache.batik.svggen.SVGGraphics2D;
import org.apache.batik.svggen.SVGGeneratorContext;
import org.apache.batik.dom.GenericDOMImplementation;
import org.w3c.dom.Document;
import org.w3c.dom.DOMImplementation;

import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JPanel;

public class TableauObserverSVG extends TableauObserverBase {
	private SVGGraphics2D d_generator;
	private OutputStream d_os;
	private JFrame d_frame; // root window

	public TableauObserverSVG(OutputStream os)
			throws IOException, FontFormatException {
		super();
		//d_frame = new JFrame("Tableau Observer");
		//JScrollPane panel = new JScrollPane(getTree());
		//d_frame.add(panel);
		//d_frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		//d_frame.pack();
		//d_frame.setSize(800, 600);
		//d_frame.setVisible(true);

		d_os = os;

		// Get a DOMImplementation.
		DOMImplementation domImpl =
			GenericDOMImplementation.getDOMImplementation();

		// Create an instance of org.w3c.dom.Document.
		Document document = domImpl.createDocument(
			"http://www.w3.org/2000/svg", "svg", null);

		SVGGeneratorContext ctx = SVGGeneratorContext.createDefault(document);
		ctx.setComment("Generated by OOPS with Batik SVG Generator");
		ctx.setEmbeddedFontsOn(true);

		// Create an instance of the SVG Generator.
		d_generator = new SVGGraphics2D(ctx, true);
	}

	public void update(Tableau t, TableauEvent e) {
		if (e instanceof TableauFinishedEvent) {
			try {
				write();
			} catch (Exception ex) {
				System.err.println(ex);
			}
		} else {
			super.update(t, e);
		}
	}

	private void write() throws IOException, UnsupportedEncodingException {
		//getTree().setSize(getTree().getPreferredSize());
		JPanel panel = new JPanel();
		panel.add(getTree());
		panel.setVisible(true);
		getTree().validate();
		getTree().paint(d_generator);
		Writer out = new OutputStreamWriter(d_os, "UTF-8");
		d_generator.stream(out, false);
		d_os.close();
	}
}
